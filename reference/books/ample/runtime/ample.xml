<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../../stylesheets/page.xsl"?>
<object name="ample" extends="runtime:AMLDocument">
	<abstract>
		<locale>
			Represents the document created out of all Ample SDK fragments found on the page.
		</locale>
	</abstract>
	<abstract>
		<locale>
			If you are coming from the jQuery universe, you will most likely enjoy using <link type="object">ample</link>.<link type="method">query</link> function,
			which is the jQuery-like API to Ample SDK. The function is overloaded and it can be called in any of the following flavours:
			<ul>
				<li><link type="object">AMLQuery</link> <link type="object">ample</link>.query(String <em>selector</em>[, <link type="object">AMLNode</link> <em>context</em>[, Function <em>resolver</em>]])</li>
				<li><link type="object">AMLQuery</link> <link type="object">ample</link>.query(String <em>xml</em>)</li>
				<li><link type="object">AMLQuery</link> <link type="object">ample</link>.query(<link type="object">AMLQuery</link> <em>collection</em>)</li>
				<li><link type="object">AMLQuery</link> <link type="object">ample</link>.query(<link type="object">AMLElement</link> <em>element</em>)</li>
			</ul>
		</locale>
	</abstract>
	<remarks />
	<examples />
	<members>
		<properties>
			<property name="namespaces" type="Object" readonly="true">
				<description>
					<locale>
						Retrieves a reference to a hash object of namespaces collected from the root element of the hosting document.
					</locale>
				</description>
			</property>
			<!--  -->
			<property name="readyState" type="String" readonly="true">
				<description>
					<locale>
						Retrieves a value that indicates the current state of the object. Possible values:
						"uninitialized" - Object is not initialized with data,
						"loading" - Object is loading its data,
						"loaded" - Object has finished loading its data,
						"interactive" - User can interact with the object even though it is not fully loaded,
						"complete" - Object is completely initialized.
					</locale>
				</description>
			</property>
		</properties>
		<methods>
			<!-- Query -->
			<method name="query" type="AMLQuery">
				<arguments>
					<argument name="query" type="String">

					</argument>
					<argument name="context" required="false" type="String">

					</argument>
					<argument name="resolver" required="false" type="Function">

					</argument>
				</arguments>
				<arguments>
					<argument name="xml" type="String">
						<description>
							<locale>

							</locale>
						</description>
					</argument>
				</arguments>
				<arguments>
					<argument name="element" type="AMLElement">
						<description>
							<locale>

							</locale>
						</description>
					</argument>
				</arguments>
				<arguments>
					<argument name="query" type="AMLQuery">
						<description>
							<locale>

							</locale>
						</description>
					</argument>
				</arguments>
				<description>
					<locale>
						jQuery-like API to Ample SDK document.
					</locale>
				</description>
			</method>
			<!-- Guard -->
			<method name="guard" type="Void">
				<arguments>
					<argument name="arguments" type="Arguments">
						<description>
							<locale>
								arguments object.
							</locale>
						</description>
					</argument>
					<argument name="parameters" type="Array">
						<description>
							<locale>
								array of parameter definitions.
								Each parameter definition is an array in the following format: {String} name, {Function} type[, {Boolean} optional, {Boolean} allownull]
							</locale>
						</description>
					</argument>
				</arguments>
				<description>
					<locale>
						Helps validating API in custom extensions.
					</locale>
				</description>
			</method>
			<!-- Ajax -->
			<method name="ajax" type="XMLHttpRequest">
				<arguments>
					<argument name="settings" type="Object">
						<description>
							<locale>
								Properties bag.
							</locale>
						</description>
					</argument>
				</arguments>
				<description>
					<locale>
						Executes an XMLHttpRequest.
					</locale>
				</description>
			</method>
			<!-- Config -->
			<method name="config" type="Variant">
				<arguments>
					<argument name="name" type="String">
						<description>
							<locale>
								Parameter name
							</locale>
						</description>
					</argument>
				</arguments>
				<arguments>
					<argument name="name" type="String">
						<description>
							<locale>
								Parameter name
							</locale>
						</description>
					</argument>
					<argument name="value" type="Variant">
						<description>
							<locale>
								Parameter value
							</locale>
						</description>
					</argument>
				</arguments>
				<description>
					<locale>
						Sets or retrieves a parameter. List of parameters:
						<ul>
							<li><b>version</b> - <em>Read-only</em>. Ample SDK version</li>
							<li><b>user-agent</b> - Ample SDK user agent string</li>
							<li><b>user-locale</b> - User locale</li>
							<li><b>enable-transitions</b> - Transitions</li>
							<li><b>enable-animations</b> - Animations</li>
							<li><b>use-style-property</b> - style property</li>
							<li><b>module-history-fix</b> - fix IE hash problem</li>
						</ul>
					</locale>
				</description>
			</method>
			<method name="ready" type="Void">
				<arguments>
					<argument name="handler" type="Function">
						<description>
							<locale>
								Handler function.
							</locale>
						</description>
					</argument>
				</arguments>
				<description>
					<locale>
						Registers a handler to be executed when page has been completely loaded.
					</locale>
				</description>
			</method>
			<method name="extend" type="Void">
				<arguments>
					<argument name="source" type="Object">
						<description>
							<locale>
								Source object to extend from.
							</locale>
						</description>
					</argument>
					<argument name="target" type="Object" required="false">
						<description>
							<locale>
								Target object for extension. If ommited, <link type="object">ample</link> object itself is in use.
							</locale>
						</description>
					</argument>
				</arguments>
				<arguments>
					<argument name="element" type="Function">
						<description>
							<locale>
								Element definition. Must have <link type="object">AMLElement</link> in its prototype chain.
							</locale>
						</description>
					</argument>
				</arguments>
				<arguments>
					<argument name="attribute" type="Function">
						<description>
							<locale>
								Attribute definition. Must have <link type="object">AMLAttr</link> in its prototype chain.
							</locale>
						</description>
					</argument>
				</arguments>
				<description>
					<locale>
						Provides extensibility point.
					</locale>
				</description>
			</method>
			<method name="include" type="Void">
				<arguments>
					<argument name="src" type="String">
						<description>
							<locale>
								Location of a file.
							</locale>
						</description>
					</argument>
				</arguments>
				<description>
					<locale>
						Loads JavaScript file. Calls to <link type="object">ample</link>.<link type="method">include</link>() from within the loaded file will properly resolve relative file locations.
					</locale>
				</description>
			</method>
			<!--  -->
			<method name="open" type="Void">
				<description>
					<locale>
						Opens Ample SDK fragment. This method can only be called while page is loading.
					</locale>
				</description>
			</method>
			<method name="close" type="Void">
				<description>
					<locale>
						Closes Ample SDK fragment. This method can only be called while page is loading.
					</locale>
				</description>
			</method>
			<method name="$instance" type="AMLElement">
				<arguments>
					<argument name="oElement" type="HTMLElement">
						<description>
							DOM HTML element
						</description>
					</argument>
				</arguments>
				<description>
					<locale>
						Finds corresponding to the HTML DOM element in the Ample SDK DOM.
					</locale>
				</description>
			</method>
			<!-- Events -->
			<method name="bind" type="Void">
				<arguments>
					<argument name="type" type="String">
						<description>
							<locale>
								Event name
							</locale>
						</description>
					</argument>
					<argument name="handler" type="Function">
						<description>
							<locale>
								Handler function
							</locale>
						</description>
					</argument>
					<argument name="capture" type="Boolean" required="false">
						<description>
							<locale>
								If true, the handler will be executed during capture phase only
							</locale>
						</description>
					</argument>
				</arguments>
				<description>
					<locale>
						Registers a handler with document
					</locale>
				</description>
			</method>
			<method name="unbind" type="Void">
				<arguments>
					<argument name="type" type="String">
						<description>
							<locale>
								Event name
							</locale>
						</description>
					</argument>
					<argument name="handler" type="Function">
						<description>
							<locale>
								Handler function
							</locale>
						</description>
					</argument>
					<argument name="capture" type="Boolean" required="false">
						<description>
							<locale>
								If true, the handler will be executed during capture phase only
							</locale>
						</description>
					</argument>
				</arguments>
				<description>
					<locale>
						Unregisters a handler from document
					</locale>
				</description>
			</method>
			<method name="trigger" type="Void">
				<arguments>
					<argument name="type" type="String">
						<description>
							<locale>
								Event name
							</locale>
						</description>
					</argument>
					<argument name="detail" type="Variant" required="false">
						<description>
							<locale>
								Event detail
							</locale>
						</description>
					</argument>
				</arguments>
				<description>
					<locale>
						Triggers an event on document.
					</locale>
				</description>
			</method>
		</methods>
		<events>
			<event name="readystatechange" group="Event" cancelable="false" bubble="false">
				<description>
					<locale>
						Fires when the state of the object has changed. You can use the <link type="property">readyState</link> property to query the current state of the element when the <link type="event">readystatechange</link> event fires.
					</locale>
				</description>
			</event>
		</events>
	</members>
</object>